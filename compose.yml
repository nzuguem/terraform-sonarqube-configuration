services:
  sonarqube:
    image: sonarqube:25.1.0.102122-community
    container_name: sonarqube
    depends_on:
      - db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_temp:/opt/sonarqube/temp
    healthcheck:
      test: wget --no-proxy -qO- http://localhost:9000/api/system/status | grep -q -e '"status":"UP"' -e '"status":"DB_MIGRATION_NEEDED"' -e '"status":"DB_MIGRATION_RUNNING"'
      interval: 25s
      timeout: 1s
      retries: 3
      start_period: 55s
    ports:
      - "9000:9000"
  
  admin-tools:
    image: curlimages/curl
    container_name: admin-tools
    restart: no
    user: root
    environment:
      NEW_ADMIN_PASSWORD: NewAdminPassword237.
      SONAR_TOKEN: ""
    volumes:
      - ./terraform.tfvars:/terraform.tfvars
    depends_on:
      sonarqube:
        condition: service_healthy
    command: 
    - sh 
    - -c
    - |
      apk add jq &&
      curl -u admin:admin -X POST "http://sonarqube:9000/api/users/change_password?login=admin&previousPassword=admin&password=$$NEW_ADMIN_PASSWORD" &&
      SONAR_TOKEN=$(curl -u admin:$$NEW_ADMIN_PASSWORD -X POST "http://sonarqube:9000/api/user_tokens/generate" -d "name=terraform" | jq -r '.token') &&
      echo "sonar_token = \"$$SONAR_TOKEN\"" >| /terraform.tfvars

  db:
    image: postgres:15
    container_name: db
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data

volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_temp:
  sonarqube_logs:
  postgresql:
  postgresql_data: